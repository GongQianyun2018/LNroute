原路由算法（50）
>>>>>>>>>>>init balance: [9, 50, 15, 31, 10, 15, 41, 15, 41, 20, 48, 50, 40, 48, 38, 41, 18, 26, 39, 15, 47, 26, 29, 4, 42, 20, 41, 2, 23, 23, 21, 17, 13, 44, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 42, 3, 4]
<<<<<<<<<<<<<<<<总跳数：1969
<<<<<<<<<<<<<<<<总费用：48.311057

>>>>>>>>>>>init balance: [9, 50, 15, 31, 10, 15, 41, 15, 41, 20, 48, 50, 40, 48, 38, 41, 18, 26, 39, 15, 47, 26, 29, 4, 42, 20, 41, 2, 23, 23, 21, 17, 13, 44, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 42, 3, 4]
<<<<<<<<<<<<<<<<总跳数：2182
<<<<<<<<<<<<<<<<总费用：54.745817

>>>>>>>>>>>init balance: [9, 50, 15, 31, 10, 15, 41, 15, 41, 20, 48, 50, 40, 48, 38, 41, 18, 26, 39, 15, 47, 26, 29, 4, 42, 20, 41, 2, 23, 23, 21, 17, 13, 44, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 42, 3, 4]
<<<<<<<<<<<<<<<<总跳数：2086
<<<<<<<<<<<<<<<<总费用：52.191498

改进算法
>>>>>>>>>>>>>>>>init balance: [9, 50, 15, 31, 10, 15, 41, 15, 41, 20, 48, 50, 40, 48, 38, 41, 18, 26, 39, 15, 47, 26, 29, 4, 42, 20, 41, 2, 23, 23, 21, 17, 13, 44, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 42, 3, 4]
<<<<<<<<<<<<<<<<总跳数：2296
<<<<<<<<<<<<<<<<总费用：37.112606

>>>>>>>>>>>>>>>>init balance: [9, 50, 15, 31, 10, 15, 41, 15, 41, 20, 48, 50, 40, 48, 38, 41, 18, 26, 39, 15, 47, 26, 29, 4, 42, 20, 41, 2, 23, 23, 21, 17, 13, 44, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 42, 3, 4]
<<<<<<<<<<<<<<<<总跳数：2670
<<<<<<<<<<<<<<<<总费用：43.260504

>>>>>>>>>>>>>>>>init balance: [9, 50, 15, 31, 10, 15, 41, 15, 41, 20, 48, 50, 40, 48, 38, 41, 18, 26, 39, 15, 47, 26, 29, 4, 42, 20, 41, 2, 23, 23, 21, 17, 13, 44, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 42, 3, 4]
<<<<<<<<<<<<<<<<总跳数：2289
<<<<<<<<<<<<<<<<总费用：40.220802





原路由算法（40）
>>>>>>>>>>>init balance: [9, 15, 31, 10, 15, 15, 20, 40, 38, 18, 26, 39, 15, 26, 29, 4, 20, 2, 23, 23, 21, 17, 13, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 3, 4, 25, 20]
<<<<<<<<<<<<<<<<总跳数：1351
<<<<<<<<<<<<<<<<总费用：27.275498

>>>>>>>>>>>init balance: [9, 15, 31, 10, 15, 15, 20, 40, 38, 18, 26, 39, 15, 26, 29, 4, 20, 2, 23, 23, 21, 17, 13, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 3, 4, 25, 20]
<<<<<<<<<<<<<<<<总跳数：1369
<<<<<<<<<<<<<<<<总费用：26.030190

>>>>>>>>>>>init balance: [9, 15, 31, 10, 15, 15, 20, 40, 38, 18, 26, 39, 15, 26, 29, 4, 20, 2, 23, 23, 21, 17, 13, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 3, 4, 25, 20]
<<<<<<<<<<<<<<<<总跳数：1364
<<<<<<<<<<<<<<<<总费用：26.071397
改进算法
>>>>>>>>>>>>>>>>init balance: [9, 15, 31, 10, 15, 15, 20, 40, 38, 18, 26, 39, 15, 26, 29, 4, 20, 2, 23, 23, 21, 17, 13, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 3, 4, 25, 20]
<<<<<<<<<<<<<<<<总跳数：1743
<<<<<<<<<<<<<<<<总费用：22.101217

>>>>>>>>>>>>>>>>init balance: [9, 15, 31, 10, 15, 15, 20, 40, 38, 18, 26, 39, 15, 26, 29, 4, 20, 2, 23, 23, 21, 17, 13, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 3, 4, 25, 20]
<<<<<<<<<<<<<<<<总跳数：1684
<<<<<<<<<<<<<<<<总费用：23.424650

>>>>>>>>>>>>>>>>init balance: [9, 15, 31, 10, 15, 15, 20, 40, 38, 18, 26, 39, 15, 26, 29, 4, 20, 2, 23, 23, 21, 17, 13, 30, 36, 6, 6, 35, 10, 18, 28, 26, 3, 11, 7, 2, 3, 4, 25, 20]
<<<<<<<<<<<<<<<<总跳数：1866
<<<<<<<<<<<<<<<<总费用：21.436937





原路由算法（30）
>>>>>>>>>>>init balance: [26, 4, 25, 7, 30, 15, 5, 7, 20, 7, 26, 20, 10, 29, 24, 25, 30, 30, 20, 24, 26, 19, 20, 9, 13, 19, 7, 27, 23, 13]
<<<<<<<<<<<<<<<<总跳数：950
<<<<<<<<<<<<<<<<总费用：15.964519

>>>>>>>>>>>init balance: [26, 4, 25, 7, 30, 15, 5, 7, 20, 7, 26, 20, 10, 29, 24, 25, 30, 30, 20, 24, 26, 19, 20, 9, 13, 19, 7, 27, 23, 13]
<<<<<<<<<<<<<<<<总跳数：854
<<<<<<<<<<<<<<<<总费用：16.293646

>>>>>>>>>>>init balance: [26, 4, 25, 7, 30, 15, 5, 7, 20, 7, 26, 20, 10, 29, 24, 25, 30, 30, 20, 24, 26, 19, 20, 9, 13, 19, 7, 27, 23, 13]
<<<<<<<<<<<<<<<<总跳数：958
<<<<<<<<<<<<<<<<总费用：18.350148
改进算法
>>>>>>>>>>>>>>>>init balance: [26, 4, 25, 7, 30, 15, 5, 7, 20, 7, 26, 20, 10, 29, 24, 25, 30, 30, 20, 24, 26, 19, 20, 9, 13, 19, 7, 27, 23, 13]
<<<<<<<<<<<<<<<<总跳数：942
<<<<<<<<<<<<<<<<总费用：14.534944

>>>>>>>>>>>>>>>>init balance: [26, 4, 25, 7, 30, 15, 5, 7, 20, 7, 26, 20, 10, 29, 24, 25, 30, 30, 20, 24, 26, 19, 20, 9, 13, 19, 7, 27, 23, 13]
<<<<<<<<<<<<<<<<总跳数：953
<<<<<<<<<<<<<<<<总费用：17.920648

>>>>>>>>>>>>>>>>init balance: [26, 4, 25, 7, 30, 15, 5, 7, 20, 7, 26, 20, 10, 29, 24, 25, 30, 30, 20, 24, 26, 19, 20, 9, 13, 19, 7, 27, 23, 13]
<<<<<<<<<<<<<<<<总跳数：942
<<<<<<<<<<<<<<<<总费用：16.908286



原路由算法（20）
>>>>>>>>>>>init balance: [4, 7, 15, 5, 7, 20, 7, 20, 10, 20, 19, 20, 9, 13, 19, 7, 13, 14, 2, 10]
<<<<<<<<<<<<<<<<总跳数：455
<<<<<<<<<<<<<<<<总费用：5.326411

>>>>>>>>>>>init balance: [4, 7, 15, 5, 7, 20, 7, 20, 10, 20, 19, 20, 9, 13, 19, 7, 13, 14, 2, 10]
<<<<<<<<<<<<<<<<总跳数：448
<<<<<<<<<<<<<<<<总费用：5.122293

>>>>>>>>>>>init balance: [4, 7, 15, 5, 7, 20, 7, 20, 10, 20, 19, 20, 9, 13, 19, 7, 13, 14, 2, 10]
<<<<<<<<<<<<<<<<总跳数：428
<<<<<<<<<<<<<<<<总费用：4.945203
改进后路由算法（20）
>>>>>>>>>>>>>>>>init balance: [4, 7, 15, 5, 7, 20, 7, 20, 10, 20, 19, 20, 9, 13, 19, 7, 13, 14, 2, 10]
<<<<<<<<<<<<<<<<总跳数：464
<<<<<<<<<<<<<<<<总费用：4.267453

>>>>>>>>>>>>>>>>init balance: [4, 7, 15, 5, 7, 20, 7, 20, 10, 20, 19, 20, 9, 13, 19, 7, 13, 14, 2, 10]
<<<<<<<<<<<<<<<<总跳数：443
<<<<<<<<<<<<<<<<总费用：3.683335

>>>>>>>>>>>>>>>>init balance: [4, 7, 15, 5, 7, 20, 7, 20, 10, 20, 19, 20, 9, 13, 19, 7, 13, 14, 2, 10]
<<<<<<<<<<<<<<<<总跳数：484
<<<<<<<<<<<<<<<<总费用：4.980137



原路由算法（10）
>>>>>>>>>>>init balance: [2, 3, 7, 2, 3, 10, 3, 10, 5, 10]
<<<<<<<<<<<<<<<<总跳数：95
<<<<<<<<<<<<<<<<总费用：0.460660

>>>>>>>>>>>init balance: [2, 3, 7, 2, 3, 10, 3, 10, 5, 10]
<<<<<<<<<<<<<<<<总跳数：81
<<<<<<<<<<<<<<<<总费用：0.421452

>>>>>>>>>>>init balance: [2, 3, 7, 2, 3, 10, 3, 10, 5, 10]
<<<<<<<<<<<<<<<<总跳数：94
<<<<<<<<<<<<<<<<总费用：0.474961
改进后路由算法
>>>>>>>>>>>>>>>>init balance: [2, 3, 7, 2, 3, 10, 3, 10, 5, 10]
<<<<<<<<<<<<<<<<总跳数：94
<<<<<<<<<<<<<<<<总费用：0.366062

>>>>>>>>>>>>>>>>init balance: [2, 3, 7, 2, 3, 10, 3, 10, 5, 10]
<<<<<<<<<<<<<<<<总跳数：98
<<<<<<<<<<<<<<<<总费用：0.425651

>>>>>>>>>>>>>>>>init balance: [2, 3, 7, 2, 3, 10, 3, 10, 5, 10]
<<<<<<<<<<<<<<<<总跳数：103
<<<<<<<<<<<<<<<<总费用：0.415379
